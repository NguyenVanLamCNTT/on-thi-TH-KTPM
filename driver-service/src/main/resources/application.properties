
spring.datasource.url= jdbc:postgresql://localhost:5432/DriverDB
spring.datasource.username=postgres
spring.datasource.password=sapassword

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= update

## config resilience4j
management.health.circuitbreakers.enabled = true
management.endpoints.web.exposure.include = health
management.endpoint.health.show-details = always


resilience4j.circuitbreaker.instances.serviceDriver.registerHealthIndicator = true
resilience4j.circuitbreaker.instances.serviceDriver.eventConsumerBufferSize = 10
resilience4j.circuitbreaker.instances.serviceDriver.failureRateThreshold = 50
resilience4j.circuitbreaker.instances.serviceDriver.minimumNumberOfCalls = 5
resilience4j.circuitbreaker.instances.serviceDriver.automaticTransitionFromOpenToHalfOpenEnabled = true
resilience4j.circuitbreaker.instances.serviceDriver.waitDurationInOpenState = 5s
resilience4j.circuitbreaker.instances.serviceDriver.permittedNumberOfCallsInHalfOpenState = 3
resilience4j.circuitbreaker.instances.serviceDriver.slidingWindowSize = 10
resilience4j.circuitbreaker.instances.serviceDriver.slidingWindowType = COUNT_BASED

spring.cache.type=redis
## redis
spring.redis.database=${REDIS_DATABASE:1}
spring.redis.host=${REDIS_HOST:localhost}
spring.redis.port=${REDIS_PORT:6379}
spring.redis.password=${REDIS_PASSWORD:r3d1sp4ssw0rd}
spring.redis.timeout=60000
spring.redis.ssl=${REDIS_SSL:false}
